!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){window.onload=()=>{const e=document.getElementById("canvas");e.width=500,e.height=500;const n=e.getContext("webgl2");n.getExtension("OES_texture_float_linear"),n.getExtension("EXT_color_buffer_float");const r=512;n.clearBufferfv(n.COLOR,0,[1,1,1,1]),n.viewport(0,0,r,1);const o=[],i=[],a=[],u=[];for(let e=0;e<r;e++){o.push(2*Math.random()-1),o.push(2*Math.random()-1),o.push(0),o.push(1);for(let e=0;e<4;e++)i.push(0),a.push(0);u.push(100),u.push(0),u.push(0),u.push(0)}const c=new Float32Array(o),T=new Float32Array(i),l=new Float32Array(a);function f(e,t,r,o,i){const a=n.createTexture();return n.bindTexture(n.TEXTURE_2D,a),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texImage2D(n.TEXTURE_2D,0,r,e.length/t,1,0,o,i,e),n.bindTexture(n.TEXTURE_2D,null),a}const E=f(new Float32Array(u),4,n.RGBA32F,n.RGBA,n.FLOAT),s=[],_=[],d=[];function m(e,t){const r=n.createShader(e);if(n.shaderSource(r,t),n.compileShader(r),!n.getShaderParameter(r,n.COMPILE_STATUS))throw new Error(n.getShaderInfoLog(r));return r}s[0]=f(c,4,n.RGBA32F,n.RGBA,n.FLOAT),_[0]=f(T,4,n.RGBA32F,n.RGBA,n.FLOAT),d[0]=f(l,4,n.RGBA32F,n.RGBA,n.FLOAT),s[1]=f(c,4,n.RGBA32F,n.RGBA,n.FLOAT),_[1]=f(T,4,n.RGBA32F,n.RGBA,n.FLOAT),d[1]=f(l,4,n.RGBA32F,n.RGBA,n.FLOAT);const R=n.createProgram(),v=m(n.VERTEX_SHADER,t(1).default);n.attachShader(R,v);const A=m(n.FRAGMENT_SHADER,t(2).default);n.attachShader(R,A),n.linkProgram(R);const F=n.createProgram(),p=m(n.VERTEX_SHADER,t(3).default);n.attachShader(F,p);const x=m(n.FRAGMENT_SHADER,t(4).default);n.attachShader(F,x),n.linkProgram(F),n.useProgram(R);const g=n.getUniformLocation(R,"N");n.uniform1f(g,r);const h=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,h),function e(){n.useProgram(R);n.viewport(0,0,r,1);n.bindFramebuffer(n.FRAMEBUFFER,h);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s[1],0);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT1,n.TEXTURE_2D,_[1],0);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT2,n.TEXTURE_2D,d[1],0);n.drawBuffers([n.COLOR_ATTACHMENT0,n.COLOR_ATTACHMENT1,n.COLOR_ATTACHMENT2]);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,s[0]);n.uniform1i(n.getUniformLocation(R,"p"),0);n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,_[0]);n.uniform1i(n.getUniformLocation(R,"v"),1);n.activeTexture(n.TEXTURE2);n.bindTexture(n.TEXTURE_2D,d[0]);n.uniform1i(n.getUniformLocation(R,"a"),2);n.activeTexture(n.TEXTURE3);n.bindTexture(n.TEXTURE_2D,E);n.uniform1i(n.getUniformLocation(R,"m"),3);n.drawArrays(n.POINTS,0,r);s.reverse();_.reverse();d.reverse();n.useProgram(F);n.bindFramebuffer(n.FRAMEBUFFER,null);n.viewport(0,0,500,500);n.clearColor(0,0,0,1);n.clear(n.COLOR_BUFFER_BIT);n.activeTexture(n.TEXTURE0);n.bindTexture(n.TEXTURE_2D,s[0]);n.uniform1i(n.getUniformLocation(F,"p"),0);n.drawArrays(n.POINTS,0,r);setTimeout(e,5)}()}},function(e,n,t){"use strict";t.r(n),n.default="#version 300 es\n\nuniform float N;\n\nvoid main() {\n\tgl_Position = vec4(2.0 * float(gl_VertexID) / N + 1.0 / N - 1.0, 0.0, 0.0, 1.0);\n\tgl_PointSize = 1.0;\n}"},function(e,n,t){"use strict";t.r(n),n.default="#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D m;\nuniform sampler2D p;\nuniform sampler2D v;\nuniform sampler2D a;\nlayout(location = 0) out vec4 new_p;\nlayout(location = 1) out vec4 new_v;\nlayout(location = 2) out vec4 new_a;\n\nconst float G = 6.67408e-11;\nconst float TIME_STEP = 0.5;\n\nvoid main() {\n  vec4 old_p = texelFetch(p, ivec2(gl_FragCoord.x, 0), 0);\n  vec4 old_v = texelFetch(v, ivec2(gl_FragCoord.x, 0), 0);\n  vec4 old_a = texelFetch(a, ivec2(gl_FragCoord.x, 0), 0);\n  int size = textureSize(m, 0).x;\n  vec3 force = vec3(0.0, 0.0, 0.0);\n\n  // 万有引力計算\n  for (int i = 0; i < size; i++) {\n    if (i == int(gl_FragCoord.x)) {\n      continue;\n    }\n    vec4 pos = texelFetch(p, ivec2(i, 0), 0);\n    float mass = texelFetch(m, ivec2(i, 0), 0).x;\n    vec3 relative = vec3(pos.xyz - old_p.xyz);\n    float norm = length(relative);\n    // 近すぎる時に、強烈に加速するのを防止する\n    if (norm > 0.01) {\n      float invnorm = 1.0 / pow(norm, 3.0);\n      force += G * mass * invnorm * relative;\n    }\n  }\n\n  // リープフロッグ法で値を更新\n  vec4 middle = old_v + vec4(TIME_STEP / 2.0) * old_a;\n  new_a = vec4(force, 0.0);\n  new_p = old_p + TIME_STEP * middle;\n  new_v = old_v + vec4(TIME_STEP / 2.0) * (old_a + vec4(force, 0.0));\n}"},function(e,n,t){"use strict";t.r(n),n.default="#version 300 es\n\nuniform sampler2D p;\n\nvoid main() {\n\tgl_Position = texelFetch(p, ivec2(gl_VertexID, 0), 0);\n\tgl_PointSize = 5.0;\n}"},function(e,n,t){"use strict";t.r(n),n.default="#version 300 es\n\nprecision mediump float;\nout vec4 color;\n\nvoid main(void) {\n\t// 円を描画する\n    if (distance(gl_PointCoord, vec2(0.5, 0.5)) < 0.5) {\n        color = vec4(1.0, 1.0, 1.0, 1.0);\n    } else {\n\t\t// 円の外側にあるピクセルは破棄\n        discard;\n    }\n}"}]);